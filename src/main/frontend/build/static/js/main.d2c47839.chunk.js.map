{"version":3,"sources":["ApiClient.js","App.js","reportWebVitals.js","index.js"],"names":["ApiClient","BASE_URL","httpGet","requestUrl","fetch","crossDomain","method","headers","App","props","state","greeting","then","response","json","responseJson","console","log","setState","message","className","this","id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOACqBA,G,uDACjBC,SAAW,6B,KAEXC,QAAU,SAACC,GACP,OAAOC,MAAM,EAAKH,SAAWE,EAAY,CACrCE,aAAa,EACbC,OAAQ,MACRC,QAAS,CAAC,eAAgB,yBCqCvBC,E,kDAxCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,cAHC,E,gEAQE,IAAD,QACD,IAAIX,GAERE,QAAQ,UACVU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVP,SAAUI,EAAaI,e,+BAQvC,OACI,sBAAKC,UAAU,MAAf,UACI,0DACA,6CAAgBC,KAAKX,MAAMC,SAA3B,OACA,qBAAKW,GAAG,aAAR,SACI,iCACI,uBAAOA,GAAG,aACV,uBAAOA,GAAG,aACV,wBAAQA,GAAG,YAAX,kC,GAjCNC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d2c47839.chunk.js","sourcesContent":["\nexport default class ApiClient {\n    BASE_URL = 'http://localhost:8080/api/';\n\n    httpGet = (requestUrl) => {\n        return fetch(this.BASE_URL + requestUrl, {\n            crossDomain: true,\n            method: 'GET',\n            headers: {'Content-Type': 'application/json'},\n        })\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport ApiClient from './ApiClient';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            greeting: 'waiting...',\n        };\n\n    }\n\n    componentDidMount() {\n        const client = new ApiClient();\n        const fetchGreeting = () => {\n            client.httpGet(\"public\")\n                .then(response => response.json())\n                .then(responseJson => {\n                    console.log(responseJson);\n                    this.setState({\n                        greeting: responseJson.message,\n                    })\n                });\n        };\n        fetchGreeting();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>Welkom in de familie app</h1>\n                <div>response: {this.state.greeting} </div>\n                <div id=\"login-form\">\n                    <form>\n                        <input id=\"username\"/>\n                        <input id=\"password\"/>\n                        <button id=\"login-btn\">Inloggen</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}